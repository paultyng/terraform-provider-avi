<!--
    Copyright 2021 VMware, Inc.
    SPDX-License-Identifier: Mozilla Public License 2.0
-->
---
layout: "avi"
page_title: "Avi: avi_sslkeyandcertificate"
sidebar_current: "docs-avi-resource-sslkeyandcertificate"
description: |-
  Creates and manages Avi SSLKeyAndCertificate.
---

# avi_sslkeyandcertificate

The SSLKeyAndCertificate resource allows the creation and management of Avi SSLKeyAndCertificate

## Example Usage

```hcl
resource "avi_sslkeyandcertificate" "foo" {
    name = "terraform-example-foo"
    tenant_ref = "/api/tenant/?name=admin"
}
```

## Argument Reference

The following arguments are supported:

* `certificate` - (Required) Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
* `name` - (Required) Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
* `ca_certs` - (Optional) Ca certificates in certificate chain. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
* `certificate_base64` - (Optional) States if the certificate is base64 encoded. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
* `certificate_management_profile_ref` - (Optional) It is a reference to an object of type certificatemanagementprofile. Allowed in enterprise edition with any value, enterprise with cloud services edition.
* `configpb_attributes` - (Optional) Protobuf versioning for config pbs. Field introduced in 21.1.1. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
* `created_by` - (Optional) Creator name. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
* `dynamic_params` - (Optional) Dynamic parameters needed for certificate management profile. Allowed in enterprise edition with any value, enterprise with cloud services edition.
* `enable_ocsp_stapling` - (Optional) Enables ocsp stapling. Field introduced in 20.1.1. Allowed in enterprise edition with any value, essentials edition(allowed values- false), basic edition(allowed values- false), enterprise with cloud services edition.
* `enckey_base64` - (Optional) Encrypted private key corresponding to the private key (e.g. Those generated by an hsm such as thales nshield). Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
* `enckey_name` - (Optional) Name of the encrypted private key (e.g. Those generated by an hsm such as thales nshield). Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
* `format` - (Optional) Format of the key/certificate file. Enum options - SSL_PEM, SSL_PKCS12. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
* `hardwaresecuritymodulegroup_ref` - (Optional) It is a reference to an object of type hardwaresecuritymodulegroup. Allowed in enterprise edition with any value, enterprise with cloud services edition.
* `import_key_to_hsm` - (Optional) Flag to enable private key import to hsm while importing the certificate. Field introduced in 22.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
* `is_federated` - (Optional) It specifies whether the object has to be replicated to the gslb followers. Field introduced in 22.1.3. Allowed in enterprise edition with any value, enterprise with cloud services edition.
* `key` - (Optional) Private key. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
* `key_base64` - (Optional) States if the private key is base64 encoded. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
* `key_params` - (Optional) Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
* `key_passphrase` - (Optional) Passphrase used to encrypt the private key. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
* `markers` - (Optional) List of labels to be used for granular rbac. Field introduced in 20.1.5. Allowed in enterprise edition with any value, essentials edition with any value, basic edition with any value, enterprise with cloud services edition.
* `ocsp_config` - (Optional) Configuration related to ocsp. Field introduced in 20.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
* `ocsp_error_status` - (Optional) Error reported during ocsp status query. Enum options - OCSP_ERR_CERTSTATUS_GOOD, OCSP_ERR_CERTSTATUS_REVOKED, OCSP_ERR_CERTSTATUS_UNKNOWN, OCSP_ERR_CERTSTATUS_SERVERFAIL_ERR, OCSP_ERR_CERTSTATUS_JOBDB, OCSP_ERR_CERTSTATUS_DISABLED, OCSP_ERR_CERTSTATUS_GETCERT, OCSP_ERR_CERTSTATUS_NONVSCERT, OCSP_ERR_CERTSTATUS_SELFSIGNED, OCSP_ERR_CERTSTATUS_CERTFINISH, OCSP_ERR_CERTSTATUS_CACERT, OCSP_ERR_CERTSTATUS_REQUEST, OCSP_ERR_CERTSTATUS_ISSUER_REVOKED, OCSP_ERR_CERTSTATUS_PARSE_CERT, OCSP_ERR_CERTSTATUS_HTTP_REQ, OCSP_ERR_CERTSTATUS_URL_LIST, OCSP_ERR_CERTSTATUS_HTTP_SEND, OCSP_ERR_CERTSTATUS_HTTP_RECV, OCSP_ERR_CERTSTATUS_HTTP_RESP. Field introduced in 20.1.1. Allowed in enterprise edition with any value, essentials edition(allowed values- ocsp_err_certstatus_disabled), basic edition(allowed values- ocsp_err_certstatus_disabled), enterprise with cloud services edition.
* `ocsp_responder_url_list_from_certs` - (Optional) This is an internal field to store the ocsp responder urls contained in the certificate. Field introduced in 20.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
* `ocsp_response_info` - (Optional) Information related to ocsp response. Field introduced in 20.1.1. Allowed in enterprise edition with any value, enterprise with cloud services edition.
* `status` - (Optional) Enum options - ssl_certificate_finished, ssl_certificate_pending. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
* `tenant_ref` - (Optional) It is a reference to an object of type tenant. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.
* `type` - (Optional) Enum options - ssl_certificate_type_virtualservice, ssl_certificate_type_system, ssl_certificate_type_ca. Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.


### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 40 mins) Used when creating the AMI
* `update` - (Defaults to 40 mins) Used when updating the AMI
* `delete` - (Defaults to 90 mins) Used when deregistering the AMI

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `uuid` -  Allowed in enterprise edition with any value, essentials, basic, enterprise with cloud services edition.

